/*** UNDER NO CIRCUMSTANCES DO NOT EDIT THIS FILE. THIS FILE IS COPIED                                    ***/
/*** FROM OSS UI. ANY CHANGES TO BE MADE IN KUBEVIOUS OSS UI.                                             ***/
/*** SOURCE: ../ui/src/src/services/WebSocketService.js                                                   ***/

import WebSocketSubscriptionClient from 'websocket-subscription-client';
import _ from 'the-lodash'

class WebSocketService
{
    constructor(sharedState)
    {
        this.sharedState = sharedState;
        this._socket = new WebSocketSubscriptionClient('/socket');

        this._socket.run();

        this._setup();
    }

    _setup()
    {
        this._setupAssets();
    }

    _setupAssets()
    {
        var sockerScope = this._socket.scope((value, target) => {
            if (target.dn == this.sharedState.get('selected_dn'))
            {
                this.sharedState.set('selected_object_assets', value);
            }
        });

        this.sharedState.subscribe(['selected_dn'],
            ({ selected_dn, }) => {

                var wsSubscriptions = []

                if (selected_dn) {
                    wsSubscriptions.push({ kind: 'assets', dn: selected_dn });
                }

                sockerScope.replace(wsSubscriptions);
            })
    }

    _subscribe(target, cb) 
    {
        this._socket.subscribe(target, value => {
            cb(value);
        });
    }

    scope(cb)
    {
        return this._socket.scope(cb);
    }
}

export default WebSocketService;
